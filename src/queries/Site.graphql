query Articles {
  articles {
    title
    slug
    description
    cover {
      url
      formats
    }
  }
}

query HomePageArticles($sort: [String], $pagination: PaginationArg) {
  articles(sort: $sort, pagination: $pagination) {
    title
    description
    slug
    category {
      name
    }
    cover {
      formats
      url
      alternativeText
    }
    publishedAt
    author {
      name
      avatar {
        url
        formats
      }
    }
  }
}

query HomePage {
  homePageContent {
    blocks {
      ... on ComponentPtaTotalDonations {
        text
        total
      }
      ... on ComponentPtaHeroSection {
        title
        content
        backgroundImage {
          url
          formats
        }
      }
      ... on ComponentPtaTotalDonations {
        id
        text
        total
      }
      ... on ComponentPtaHomePageSlider {
        slides {
          url
          formats
        }
      }
      ... on ComponentPtaHomePageAbout {
        heading
        description
      }
      ... on ComponentPtaHomePageVolunteerBlock {
        content
      }
      ... on ComponentPtaFeaturedProject {
        heading
        description
        goalDonations
        image {
          url
          alternativeText
          formats
        }
        projectLink {
          link
          buttonText
        }
        currentDonations
      }
    }
  }
}

query Header {
  header {
    logoText
    donateButtonLink {
      link
    }
    menuLink {
      buttonText
      link
    }
    logoImage {
      url
      formats
    }
  }
}
query Footer {
  footer {
    footerLogo {
      alternativeText
      url
    }
    copyright
    socialLink {
      buttonText
      link
    }
  }
}
# // all events
query EventList {
  events {
    heading
    isPast
    featuredImage {
      url
    }
    dateTime
    slug
    description
  }
}

query HomePageEvents($sort: [String], $pagination: PaginationArg) {
  events(sort: $sort, pagination: $pagination) {
    heading
    isPast
    featuredImage {
      url
    }
    dateTime
    slug
    description
  }
}

# single event
query Event($slug: String) {
  events(filters: { slug: { eq: $slug } }) {
    heading
    dateTime

    isPast
    featuredImage {
      url
      alternativeText
    }
    donationReceived
    blocks {
      ... on ComponentPtaRichTextMarkdown {
        id
        content
      }
      ... on ComponentSharedMedia {
        id
        file {
          url
          alternativeText
          formats
        }
      }
    }
    description
  }
}

query Article($slug: String) {
  articles(filters: { slug: { eq: $slug } }) {
    cover {
      alternativeText
      url
      formats
    }
    title
    description
    blocks {
      ... on ComponentSharedQuote {
        id
        body
        title
      }
      ... on ComponentSharedRichText {
        id
        body
      }
      ... on ComponentSharedMedia {
        id
        file {
          alternativeText
          url
          formats
        }
      }
      ... on ComponentSharedSlider {
        id
        files {
          alternativeText
          url
          formats
        }
      }
      ... on ComponentPtaTextWithImage {
        id
        heading
        content
        file {
          url
          alternativeText
          formats
        }
        imageSide
      }
    }
  }
}

mutation CreateVolunteer($data: VolunteerInput!) {
  createVolunteer(data: $data) {
    name
    email
  }
}

query Projects {
  projects {
    coverImage {
      alternativeText
      url
    }
    donationsGoal
    heading
    description
    slug
  }
}

query Project($slug: String) {
  projects(filters: { slug: { eq: $slug } }) {
    coverImage {
      alternativeText
      url
    }
    donationsGoal
    heading
    body
    donationsReceived
    donateButtonLink {
      link
    }
  }
}

query ContactPage {
  contactPage {
    heading
    description
    content
  }
}

mutation CreateContactFormEntry($data: ContactFormEntryInput!) {
  createContactFormEntry(data: $data) {
    name
    email
  }
}

query Global {
  global {
    siteName
    siteDescription
    defaultSeo {
      metaDescription
      metaTitle
      shareImage {
        url
      }
    }
  }
}
