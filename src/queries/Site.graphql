query Articles {
  articles {
    title
    slug
    description
    cover {
      url
    }
  }
}

query HomePageArticles($sort: [String], $pagination: PaginationArg) {
  articles(sort: $sort, pagination: $pagination) {
    title
    description
    slug
    cover {
      url
      alternativeText
    }
    publishedAt
    author {
      name
      avatar {
        url
      }
    }
  }
}

query HomePage {
  homePageContent {
    blocks {
      ... on ComponentPtaHeroSection {
        title
        content
        backgroundImage {
          url
        }
      }
      ... on ComponentPtaTotalDonations {
        id
        text
        total
      }
      ... on ComponentPtaHomePageSlider {
        slides {
          url
        }
      }
    }
  }
}

query Header {
  header {
    logoText
    donateButtonLink {
      link
    }
    menuLink {
      buttonText
      link
    }
    logoImage {
      url
      formats
    }
  }
}

# // all events
query EventList {
  events {
    heading
    isPast
    featuredImage {
      url
    }
    dateTime
    slug
    description
  }
}

query HomePageEvents($sort: [String], $pagination: PaginationArg) {
  events(sort: $sort, pagination: $pagination) {
    heading
    isPast
    featuredImage {
      url
    }
    dateTime
    slug
    description
  }
}

# single event
query Event($slug: String) {
  events(filters: { slug: { eq: $slug } }) {
    heading
    dateTime

    isPast
    featuredImage {
      url
      alternativeText
    }
    donationReceived
    blocks {
      ... on ComponentPtaRichTextMarkdown {
        content
      }
      ... on ComponentSharedMedia {
        file {
          url
          alternativeText
        }
      }
    }
    description
  }
}

query Article($slug: String) {
  articles(filters: { slug: { eq: $slug } }) {
    cover {
      alternativeText
      url
    }
    title
    description
    blocks {
      ... on ComponentSharedQuote {
        body
        title
      }
      ... on ComponentSharedRichText {
        body
      }
      ... on ComponentSharedRichText {
        body
      }
      ... on ComponentSharedSlider {
        files {
          alternativeText
          url
        }
      }
    }
  }
}

mutation CreateVolunteer($data: VolunteerInput!) {
  createVolunteer(data: $data) {
    name
    email
  }
}

query Projects {
  projects {
    coverImage {
      alternativeText
      url
    }
    donationsGoal
    heading
    description
    slug
  }
}

query Project($slug: String) {
  projects(filters: { slug: { eq: $slug } }) {
    coverImage {
      alternativeText
      url
    }
    donationsGoal
    heading
    body
    donationsReceived
    donateButtonLink {
      link
    }
  }
}
